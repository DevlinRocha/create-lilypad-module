#!/usr/bin/env bash
set -euo pipefail

SCRIPT_DIR=$(dirname "$(readlink -f "$0")")

function create_project {
    # Validate template directory
    if [[ ! -d $template_dir ]]; then
        echo "❌ Error: Template directory not found at $template_dir" >&2
        exit 1
    fi

    # Create project directory
    echo -e "\nCreating a new Lilypad module in: $target_dir"
    mkdir -p "$target_dir"/

    # Copy template with exclusions
    rsync -aq "${template_dir}/" "${target_dir}/"

    # Initialize Git repository
    if ! git -C $target_dir init >/dev/null 2>&1; then
        echo "❌ Error: Failed to initialize Git repository" >&2
        exit 1
    fi

    if [[ $1 == "ollama" ]]; then
        chmod +x "$target_dir/help"
        chmod -R +x "$target_dir/scripts"
    fi

    # Success message
    echo -e "\n✅ Success! Created $project_name at ./$project_name"
    echo -e "\n📂 Get started by running:"
    echo -e "\n\tcd $project_name/"
    if [[ $1 == "ollama" ]]; then
        echo -e "\tscripts/configure"
        echo -e "\tscripts/build"
        echo -e "\tscripts/run"
    else
        echo -e "\topen README.md"
    fi
    echo -e "\n🐸 GLHF!"
}

# Main function
main() {
    local project_name="${1:-}"
    local target_dir template_dir

    # Get project name if not provided
    if [[ -z $project_name ]]; then
        echo "🐸 Enter the name of your new project:"
        printf "(Default: lilypad-module) ➔ "
        read -r project_name
        project_name="${project_name:-lilypad-module}"
    fi

    target_dir="$(pwd)/${project_name}"

    # Validate target directory
    if [[ -d $target_dir ]]; then
        echo "❌ Error: Directory '$project_name' already exists." >&2
        exit 1
    fi

    options=("Ollama" "Hugging Face" "Exit")

    PS3="Choose an option: "

    shopt -s nocasematch

    select opt in "${options[@]}"; do
        case $REPLY in
        1 | "o"*)
            echo "You chose Ollama"
            template_dir="${SCRIPT_DIR}/templates/ollama"
            create_project "ollama"
            break
            ;;
        2 | "h"*)
            echo "You chose Hugging Face"
            template_dir="${SCRIPT_DIR}/templates/hugging_face"
            create_project "hugging_face"
            break
            ;;
        3 | "e"* | "c"*)
            echo "Exiting..."
            exit 0
            ;;
        "")
            echo "Invalid option"
            ;;
        *)
            echo "Invalid option"
            ;;
        esac
    done

    shopt -u nocasematch
}

# Execute main function
main "$@"
